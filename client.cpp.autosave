#include "client.h"


Client::Client() {}

Client::Client(int port)
{
    this->port = port;
    udpSocket = new QUdpSocket(this);
}

void Client::startListenIp(int broadCastPort)
{
    udpSocket->bind(broadCastPort, QUdpSocket::ShareAddress);
    connect(udpSocket, SIGNAL(readyRead()), this, SLOT(processPendingDatagrams()));
}

void Client::processPendingDatagrams()
 {
     if (udpSocket->hasPendingDatagrams()) {
         QHostAddress addr;
         QByteArray datagram;

         
         datagram.resize(udpSocket->pendingDatagramSize());
         udpSocket->readDatagram(datagram.data(), datagram.size(), &addr);

         this->startConnectToServer(addr);
         udpSocket->close();
     }
 }

void Client::startConnectToServer(QHostAddress host)
{
    socket = new QTcpSocket();

    connect(socket, SIGNAL(connected()), this, SLOT(onConnectedToServer()));
    connect(socket, SIGNAL(readyRead()), this, SLOT(readData()));
    socket->connectToHost(host, port);
}

void Client::onConnectedToServer()
{
    emit connectedToServer();
}

void Client::readData()
{
    emit messageReceived(QString(socket->readLine()));
}

void Client::sendData(QString data)
{
    if (socket->isOpen()) {
        socket->write(data.toLatin1());
    }
}
